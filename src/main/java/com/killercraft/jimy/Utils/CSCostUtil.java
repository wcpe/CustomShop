package com.killercraft.jimy.Utils;import java.util.HashMap;import static com.killercraft.jimy.CustomShop.*;public class CSCostUtil {    public static String giveCost(String name, String costId, int i) {        if (playerData.containsKey(name)) {            HashMap<String, Integer> pCosts = playerData.get(name);            if (costMap.containsKey(costId)) {                if (pCosts.containsKey(costId)) {                    pCosts.put(costId, pCosts.get(costId) + i);                } else {                    pCosts.put(costId, i);                }                playerData.put(name, pCosts);                return langMap.get("AddCost").replace("<cost>", costMap.get(costId)).replace("<value>", pCosts.getOrDefault(costId, 0) + "");            } else return langMap.get("CostLose");        } else {            if (costMap.containsKey(costId)) {                HashMap<String, Integer> pCosts = new HashMap<>();                pCosts.put(costId, i);                playerData.put(name, pCosts);                return langMap.get("AddCost").replace("<cost>", costMap.get(costId)).replace("<value>", pCosts.getOrDefault(costId, 0) + "");            } else return langMap.get("CostLose");        }    }    public static boolean takeCost(String name, String costId, int i) {        if (playerData.containsKey(name)) {            HashMap<String, Integer> pCosts = playerData.get(name);            if (costMap.containsKey(costId)) {                if (pCosts.containsKey(costId)) {                    int left = pCosts.get(costId) - i;                    if (left >= 0) {                        pCosts.put(costId, left);                        playerData.put(name, pCosts);                        return true;                    } else return false;                } else return false;            } else return false;        } else return false;    }    public static String delCost(String name, String costId, int i) {        if (playerData.containsKey(name)) {            HashMap<String, Integer> pCosts = playerData.get(name);            if (costMap.containsKey(costId)) {                if (pCosts.containsKey(costId)) {                    int left = pCosts.get(costId) - i;                    if (left < 0) left = 0;                    pCosts.put(costId, left);                    playerData.put(name, pCosts);                    return langMap.get("DelCost").replace("<cost>", costMap.get(costId)).replace("<value>", pCosts.getOrDefault(costId, 0) + "");                } else return langMap.get("DelCost").replace("<cost>", costMap.get(costId)).replace("<value>", 0 + "");            } else return langMap.get("CostLose");        } else return langMap.get("DelCost").replace("<cost>", costMap.get(costId)).replace("<value>", 0 + "");    }    public static int checkCost(String name, String costId) {        if (playerData.containsKey(name)) {            HashMap<String, Integer> pCosts = playerData.get(name);            if (pCosts.containsKey(costId)) {                return pCosts.get(costId);            }        }        return 0;    }}